{"ast":null,"code":"var _jsxFileName = \"C:\\\\angular\\\\FSD-assignments-03\\\\src\\\\Player.js\";\nimport React from 'react';\n\nclass Player extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.videoPlayerRef = React.createRef();\n    this.muteFlag = false;\n    this.mode = false;\n\n    this.playlistClick = (id, url) => {\n      console.log(\"videoPlayerRef\", this.videoPlayerRef);\n      this.videoPlayerRef.current.src = url;\n      this.videoPlayerRef.current.play();\n    };\n\n    this.videoControl = controlFlag => {\n      if (controlFlag === 'play') {\n        this.videoPlayerRef.current.play();\n      } else if (controlFlag === 'pause') {\n        this.videoPlayerRef.current.pause();\n      } else if (controlFlag === 'plus' && this.videoPlayerRef.current.volume > 0 && this.videoPlayerRef.current.volume < 1) {\n        this.videoPlayerRef.current.volume += 0.1;\n      } else if (controlFlag === 'minus' && this.videoPlayerRef.current.volume >= 0.1 && this.videoPlayerRef.current.volume <= 1) {\n        this.videoPlayerRef.current.volume -= 0.1;\n      } else if (controlFlag === 'reload') {\n        this.videoPlayerRef.current.load();\n        this.videoPlayerRef.current.play();\n      } else if (controlFlag === 'mute') {\n        if (this.muteFlag === false) {\n          this.videoPlayerRef.current.muted = true;\n          this.muteFlag = true;\n        } else {\n          this.videoPlayerRef.current.muted = false;\n          this.muteFlag = false;\n        }\n      }\n    };\n  }\n\n  /* this.videoPlayerRef.current.ontimeupdate = ()=> {\r\n      console.log('timeupdate',this.videoPlayerRef.current);\r\n  } */\n  onTimeUpdate() {\n    let currentPercent = Math.round(Math.floor(this.videoPlayerRef.current.currentTime) / Math.floor(this.videoPlayerRef.current.duration) * 100);\n\n    if (isNaN(currentPercent)) {\n      currentPercent = 0;\n    }\n\n    this.props.onTimeUpdate(currentPercent);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      id: \"videoPlayer\",\n      ref: this.videoPlayerRef,\n      onTimeUpdate: () => this.onTimeUpdate(),\n      width: \"90%\",\n      height: \"80%\",\n      controls: \"controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: \"https://video.pearvideo.com/mp4/adshort/20190706/cont-1574279-14096750_adpkg-ad_hd.mp4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"videoId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Player;","map":{"version":3,"sources":["C:\\angular\\FSD-assignments-03\\src\\Player.js"],"names":["React","Player","Component","videoPlayerRef","createRef","muteFlag","mode","playlistClick","id","url","console","log","current","src","play","videoControl","controlFlag","pause","volume","load","muted","onTimeUpdate","currentPercent","Math","round","floor","currentTime","duration","isNaN","props","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass Player extends React.Component {\r\n\r\n    videoPlayerRef = React.createRef();\r\n    muteFlag = false;\r\n    mode = false;\r\n\r\n    /* this.videoPlayerRef.current.ontimeupdate = ()=> {\r\n        console.log('timeupdate',this.videoPlayerRef.current);\r\n    } */\r\n\r\n    onTimeUpdate() {\r\n        let currentPercent = Math.round(Math.floor(this.videoPlayerRef.current.currentTime) / Math.floor(this.videoPlayerRef.current.duration) * 100);\r\n        if (isNaN(currentPercent)) {\r\n            currentPercent = 0;\r\n        }\r\n        this.props.onTimeUpdate(currentPercent);\r\n    }\r\n\r\n    playlistClick = (id, url) => {\r\n        console.log(\"videoPlayerRef\", this.videoPlayerRef);\r\n        this.videoPlayerRef.current.src = url;\r\n        this.videoPlayerRef.current.play();\r\n    }\r\n    \r\n    videoControl = (controlFlag) => {\r\n\r\n        if (controlFlag === 'play') {\r\n            this.videoPlayerRef.current.play();\r\n        } else if (controlFlag === 'pause') {\r\n            this.videoPlayerRef.current.pause();\r\n        } else if (controlFlag === 'plus' && this.videoPlayerRef.current.volume > 0 && this.videoPlayerRef.current.volume < 1) {\r\n            this.videoPlayerRef.current.volume += 0.1;\r\n        } else if (controlFlag === 'minus' && this.videoPlayerRef.current.volume >= 0.1 && this.videoPlayerRef.current.volume <= 1) {\r\n            this.videoPlayerRef.current.volume -= 0.1;\r\n        } else if (controlFlag === 'reload') {\r\n            this.videoPlayerRef.current.load();\r\n            this.videoPlayerRef.current.play();\r\n        } else if (controlFlag === 'mute') {\r\n            if (this.muteFlag === false) {\r\n                this.videoPlayerRef.current.muted = true;\r\n                this.muteFlag = true;\r\n            } else {\r\n                this.videoPlayerRef.current.muted = false;\r\n                this.muteFlag = false;\r\n            }\r\n        } \r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <video id=\"videoPlayer\" ref={this.videoPlayerRef} onTimeUpdate={()=>this.onTimeUpdate()} width=\"90%\" height=\"80%\" controls=\"controls\">\r\n                    <source\r\n                        src=\"https://video.pearvideo.com/mp4/adshort/20190706/cont-1574279-14096750_adpkg-ad_hd.mp4\" />\r\n                </video>\r\n                <input type=\"hidden\" id=\"videoId\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Player;"]},"metadata":{},"sourceType":"module"}